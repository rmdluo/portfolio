---
import ImageCard from './common/ImageCard.astro';
import type { ImageCardProps } from '../types/ImageCardProps';
const { images } = Astro.props;
---

<div class="gallery">
    {images.map((image: ImageCardProps) => (
        <ImageCard 
            {...image}
            size="dynamic"
        />
    ))}
</div>

<style>
    .gallery {
        --min-image-width: min(100%, 24rem);
        --columns: auto-fit;
        display: grid;
        grid-template-columns: repeat(var(--columns), minmax(var(--min-image-width), 1fr));
        gap: 2rem;
        padding: 2rem;
        width: 100%;
        max-width: 1400px;
        margin: 0 auto;
    }

    /* Center single image */
    .gallery:has(:only-child) {
        --columns: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    @media (max-width: 1200px) {
        .gallery {
            --min-image-width: min(100%, 20rem);
        }
    }

    @media (max-width: 768px) {
        .gallery {
            --min-image-width: min(100%, 16rem);
            gap: 1.5rem;
            padding: 1.5rem;
        }
    }

    @media (max-width: 640px) {
        .gallery {
            --min-image-width: 100%;
            padding: 1rem;
            gap: 1rem;
        }
    }
</style>

<script>
    // Update gallery layout based on window size
    function updateGalleryLayout() {
        const gallery = document.querySelector('.gallery') as HTMLElement;
        if (!gallery) return;

        const width = window.innerWidth;
        const container = gallery.getBoundingClientRect().width;
        const minImageWidth = parseFloat(getComputedStyle(gallery).getPropertyValue('--min-image-width'));
        
        // Calculate optimal number of columns
        const optimalColumns = Math.floor(container / minImageWidth);
        
        // Update columns if not single image
        if (!gallery.querySelector(':only-child')) {
            gallery.style.setProperty('--columns', `${optimalColumns}`);
        }
    }

    // Initialize and add event listeners
    updateGalleryLayout();
    window.addEventListener('resize', updateGalleryLayout);
    window.addEventListener('load', updateGalleryLayout);
</script> 